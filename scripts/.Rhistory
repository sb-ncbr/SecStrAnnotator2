DATADIR = '/home/adam/Workspace/C#/SecStrAnnot2_data/SecStrAPI/testing_20200128-verbose'
source('R_lib.R')
install.packages("Hmisc")
q()
getwd()
DATADIR = '/home/adam/Workspace/C#/SecStrAnnot2_data/SecStrAPI/testing_20200128-verbose'
source('R_lib.R')
install.packages("Hmisc")
install.packages('Hmisc')
q()
DATADIR = '/home/adam/Workspace/C#/SecStrAnnot2_data/SecStrAPI/testing_20200128-verbose'
source('R_lib.R')
dir.create(fullname('plots'), showWarnings=FALSE)
source('R_lib.R')
dir.create(fullname('plots'), showWarnings=FALSE)
# Read  SSEs
distinction = read.csv(fullname('domain_taxons_groups.tsv'), sep='\t', header=FALSE, col.names=c('Domain','TaxID','Group'))
ligands = read.csv(fullname('ligands.tsv'), sep='\t', header=FALSE, col.names=c('PDB','Ligands'))
sNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start','end','type'))
sNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start','end','type'))
help('Hmisc')
??Hmisc
sNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start','end','type'))
sNR = left_join(add_lengths(sNR), distinction, by='Domain') %>% filter(label %in% our_sses)
sNR = sNR %>% select(-starts_with("longest_"), -starts_with("bonds_"))
write.csv(sNR, fullname('SetNR.csv'), row.names=FALSE)
sALL = read_sses_json_new(fullname('annotations_with_reference_residues_ALL.json'), c('start','end','type'), one_domain_per_pdb=TRUE)
sALL = left_join(add_lengths(sALL), distinction, by='Domain') %>% filter(label %in% our_sses)
View(sNR)
View(sNR)
sNR = read.csv(fullname('SetNR.csv'))
DATADIR = '/home/adam/Workspace/C#/SecStrAnnot2_data/SecStrAPI/testing_20200128-verbose'
source('R_lib.R')
dir.create(fullname('plots'), showWarnings=FALSE)
# Read  SSEs
distinction = read.csv(fullname('domain_taxons_groups.tsv'), sep='\t', header=FALSE, col.names=c('Domain','TaxID','Group'))
ligands = read.csv(fullname('ligands.tsv'), sep='\t', header=FALSE, col.names=c('PDB','Ligands'))
sNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start','end','type'))
# Read  SSEs
distinction = read.csv(fullname('domain_taxons_groups.tsv'), sep='\t', header=FALSE, col.names=c('Domain','TaxID','Group'))
# ligands = read.csv(fullname('ligands.tsv'), sep='\t', header=FALSE, col.names=c('PDB','Ligands'))
sNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start','end','type'))
sNR = left_join(add_lengths(sNR), distinction, by='Domain') %>% filter(label %in% our_sses)
sNR = sNR %>% select(-starts_with("longest_"), -starts_with("bonds_"))
write.csv(sNR, fullname('SetNR.csv'), row.names=FALSE)
sALL = read_sses_json_new(fullname('annotations_with_reference_residues_ALL.json'), c('start','end','type'), one_domain_per_pdb=TRUE)
sALL = left_join(add_lengths(sALL), distinction, by='Domain') %>% filter(label %in% our_sses)
sALL = read_sses_json_new(fullname('annotations_with_reference_residues_ALL.json'), c('start','end','type'), one_domain_per_pdb=TRUE)
sALL = left_join(add_lengths(sALL), distinction, by='Domain') %>% filter(label %in% our_sses)
dALL = read_sses_json_new(fullname('annotations_with_reference_residues_ALL.json'), c('start'), one_domain_per_pdb=TRUE, only_domain_lists=TRUE)
dNR = read_sses_json_new(fullname('annotations_with_reference_residues_NR.json'), c('start'), one_domain_per_pdb=TRUE, only_domain_lists=TRUE)
dCombined = dNR %>%
transmute(UniProt=UniProt, Domain=Domains) %>%
left_join(distinction,by="Domain") %>%
left_join(dALL, by="UniProt") %>%
transmute(Group=Group, UniProt=UniProt, SetNR=Domain, CountInSetALL=Count, SetALL=Domains) %>%
arrange(Group, UniProt)
write.table(dCombined, file=fullname('plots/domain_lists_table.tsv'), quote=FALSE, sep='\t', row.names=FALSE)
# barplot(table((sALL %>% distinct(PDB, Group))$Group), main='Number of PDB entries in superkingdoms (Set-ALL)')
barplot(table((sNR %>% distinct(PDB, Group))$Group), main='Number of PDB entries in superkingdoms (Set-NR)')
table((sNR %>% distinct(PDB, Group))$Group)
# Statistical comparison Set-NR-Bact vs. Set-NR-Euka
sNR_Bact = filter(sNR, Group=='Bact')
sNR_Euka = filter(sNR, Group=='Euka')
sNR_Bact_nz = filter(sNR_Bact, length>0)
sNR_Euka_nz = filter(sNR_Euka, length>0)
two_sample_occurrence_prop.test(sNR_Bact, sNR_Euka, p_limit=0.05, print_all=TRUE)
two_sample_occurrence_fisher.test(sNR_Bact, sNR_Euka, p_limit=0.05, print_all=TRUE)
two_sample_test_by_labels_with_comparison(ks.test, sNR_Bact_nz, sNR_Euka_nz, 'length', label_col='label', p_limit=0.05, print_all=TRUE, reversed=TRUE)
two_sample_test_by_labels_with_comparison(wilcox.test, sNR_Bact_nz, sNR_Euka_nz, 'length', label_col='label', p_limit=0.05, print_all=TRUE)
# Plots for occurrence
occurrence_table_NR = table_sse_occurrence(sNR, alpha=0.05)
View(occurrence_table_NR)
View(occurrence_table_NR)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, title='Set-NR')
print_png(fullname('plots/occurrence-sNR.png'), width=4000, ratio=2/1, res=400)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, title='Set-NR', turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500t.png'), width=4000, ratio=2/1, res=500)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, title='Set-NR', stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500s.png'), width=4000, ratio=2/1, res=500)
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic')
print_png(fullname('plots/occurrence-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic', turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic', stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
# Plots for length distribution
boxplot_sse(sNR, y_column='length', ignore_zero=TRUE, title='Set-NR')
??capitalize
??paste
paste()
paste('a', c(1,2,3))
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
# Plots for length distribution
boxplot_sse(sNR, y_column='length', ignore_zero=TRUE, title='Set-NR')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
print_png(fullname('plots/length-sNR.png'), width=4000, ratio=2/1, res=400)
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic')
# Plots for length distribution
boxplot_sse(sNR, y_column='length', ignore_zero=TRUE, title='Set-NR')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
print_png(fullname('plots/length-sNR.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR', turn_labels=TRUE)
print_png(fullname('plots/length-sNR-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR', stagger_labels=TRUE)
print_png(fullname('plots/length-sNR-500s.png'), width=4000, ratio=2/1, res=500)
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
# Plots for length distribution
boxplot_sse(sNR, y_column='length', ignore_zero=TRUE, title='Set-NR')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
print_png(fullname('plots/length-sNR.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR', turn_labels=TRUE)
print_png(fullname('plots/length-sNR-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR', stagger_labels=TRUE)
print_png(fullname('plots/length-sNR-500s.png'), width=4000, ratio=2/1, res=500)
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic', turn_labels=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic', stagger_labels=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
help('mapply')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
toupper()
toupper('pica')
substr('pica')
substr('pica',0)
substr('pica',0,3)
substr('pica',0,4)
substr('pica',1,4)
substr('pica',2,4)
substr('pica',2)
substr('pica',2,-1)
substr('pica',2,inf)
substr('pica',2,Inf)
substring('pica',2,Inf)
substring('pica',2)
substring('pica',1)
substring('pica',1,1)
substring('pica',2)
substring(c('pica', 'vole'),2)
c('pica', 'vole')
substring(c('pica', 'vole'),2)
toupper(substring(c('pica', 'vole'),2))
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title=NULL)
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, title='Set-NR', turn_labels=TRUE)
#boxplot_sse(sNR_noout, y_column='length', ignore_zero=TRUE, title='Set-NR (without outliers)')
violinplot_sse_lengths(sNR, ignore_zero=TRUE)
print_png(fullname('plots/length-sNR.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, turn_labels=TRUE)
print_png(fullname('plots/length-sNR-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, stagger_labels=TRUE)
print_png(fullname('plots/length-sNR-500s.png'), width=4000, ratio=2/1, res=500)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
print_png(fullname('plots/length-sNR-500s.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths(sNR, ignore_zero=TRUE, stagger_labels=TRUE)
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
# violinplot_sse_lengths(sNR_noout, ignore_zero=TRUE, title='Set-NR (without outliers)')  # + coord_cartesian(ylim=c(0,40))
# violinplot_sse_lengths_multiset('Set-NR'=sNR, 'Set-ALL'=sALL, ignore_zero=FALSE,  title='Set-ALL vs Set-NR')
# violinplot_sse_lengths(sNR, group_col='Group', ignore_zero=TRUE,  title='Set-NR')
# violinplot_sse_lengths_multiset('Set-NR-Bact'=sNR_Bact, 'Set-NR-Euka'=sNR_Euka, ignore_zero=TRUE,  title='Set-NR, bacterial vs eukaryotic')
# print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE, turn_labels=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
violinplot_sse_lengths_multiset2('Bact'=sNR_Bact, 'Euka'=sNR_Euka, ignore_zero=TRUE, stagger_labels=TRUE)
print_png(fullname('plots/length-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, title='Set-NR')
print_png(fullname('plots/occurrence-sNR.png'), width=4000, ratio=2/1, res=400)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05)
print_png(fullname('plots/occurrence-sNR.png'), width=4000, ratio=2/1, res=400)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500t.png'), width=4000, ratio=2/1, res=500)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500s.png'), width=4000, ratio=2/1, res=500)
plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic')
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic')
print_png(fullname('plots/occurrence-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic', turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic', stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, title='Set-NR, bacterial vs eukaryotic')
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka)
print_png(fullname('plots/occurrence-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
# plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05)
# print_png(fullname('plots/occurrence-sNR.png'), width=4000, ratio=2/1, res=400)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, turn_labels=TRUE)
source('~/Workspace/C#/SecStrAnnot2/scripts/R_lib.R')
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05)
print_png(fullname('plots/occurrence-sNR.png'), width=4000, ratio=2/1, res=400)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500t.png'), width=4000, ratio=2/1, res=500)
plot_sse_occurrence(sNR, show_confidence = TRUE, alpha=0.05, stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-500s.png'), width=4000, ratio=2/1, res=500)
# plot_compare_sse_occurrence('Set-NR'=sNR, 'Set-ALL'=sALL, show_confidence = TRUE, alpha=0.05, title='Set-ALL vs Set-NR')
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka)
print_png(fullname('plots/occurrence-sNR-Bact-Euka.png'), width=4000, ratio=2/1, res=400)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, turn_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500t.png'), width=4000, ratio=2/1, res=500)
plot_compare_sse_occurrence(Bact=sNR_Bact, Euka=sNR_Euka, stagger_labels=TRUE)
print_png(fullname('plots/occurrence-sNR-Bact-Euka-500s.png'), width=4000, ratio=2/1, res=500)
quit()
